apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  {{- if eq .Values.global.deploy_env "mio" }}
  replicas: {{ .Values.replicas.mio }}
  {{- else if eq .Values.global.deploy_env "ilt" }}
  replicas: {{ .Values.replicas.ilt }}
  {{- else if eq .Values.global.deploy_env "kidc" }}
  replicas: {{ .Values.replicas.kidc }}
  {{- else }}
  replicas: "invalid global.deploy_env"
  {{ end }}
  minReadySeconds: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- if eq .Values.global.deploy_env "mio" }}
      maxSurge: {{ .Values.rollingUpdate.mio.maxSurge }}
      {{- else if eq .Values.global.deploy_env "ilt" }}
      maxSurge: {{ .Values.rollingUpdate.ilt.maxSurge }}
      {{- else if eq .Values.global.deploy_env "kidc" }}
      maxSurge: {{ .Values.rollingUpdate.kidc.maxSurge }}
      {{- else }}
      maxSurge: "invalid global.deploy_env"
      {{ end }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Release.Name }}
      securityContext:
        runAsUser: 1100
        runAsGroup: 1100
        fsGroup: 1100
      initContainers:
        - name: make-log-directory
        {{- if eq .Values.image.registry "helm-repos" }}
        {{- if eq .Values.global.deploy_env "mio" }}
          image: abis.ahnlab.com/docker-virtual-remotes/busybox
          {{- else if eq .Values.global.deploy_env "ilt" }}
          image: abis.ahnlab.com/docker-virtual-remotes/busybox
          {{- else if eq .Values.global.deploy_env "kidc" }}
          image: pub01.asd.ahnlab.com:5000/busybox
          {{ end }}
        {{- else }}
          image: abis.ahnlab.com/docker-virtual-remotes/busybox
        {{ end }}
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
          command: [ "/bin/sh", "-c" ]
          args:
            - "mkdir -p /var/log/{{ .Values.global.serviceName }}; chown -R 1100:1100 /var/log/{{ .Values.global.serviceName }}"
          volumeMounts:
            - name: logdir
              mountPath: /var/log
      containers:
        - name: {{ .Release.Name }}
        {{- if eq .Values.image.registry "helm-repos" }}
          {{- if eq .Values.global.deploy_env "mio" }}
          image: abis.ahnlab.com/docker-virtual-locals/{{ .Values.image.project }}/{{ .Chart.Name }}:{{ .Chart.AppVersion}}
          {{- else if eq .Values.global.deploy_env "ilt" }}
          image: abis.ahnlab.com/docker-virtual-locals/{{ .Values.image.project }}/{{ .Chart.Name }}:{{ .Chart.AppVersion}}
          {{- else if eq .Values.global.deploy_env "kidc" }}
          image: pub01.asd.ahnlab.com:5000/{{ .Values.image.project }}/{{ .Chart.Name }}:{{ .Chart.AppVersion}}
          {{ end }}
        {{- else }}
          image: docker.io/local/{{ .Chart.Name }}:{{ .Chart.AppVersion }}
        {{ end }}
          env:
            - name: TZ
              value: Asia/Seoul
            - name: JAVA_OPTS
              value: -XX:MaxRAMPercentage=75.0 -XX:InitialRAMPercentage=20.0  -XX:+UseContainerSupport -XX:+UseLargePagesInMetaspace -XX:+UseG1GC -Dfile.encoding=UTF-8 -XX:ActiveProcessorCount=20
          terminationMessagePath: /var/log/{{ .Values.global.serviceName }}/terminationMessage.log
          terminationMessagePolicy: "FallbackToLogsOnError"
        {{- if .Values.containerResources.enabled }}
          resources:
          {{- if eq .Values.global.deploy_env "mio" }}
            {{- toYaml .Values.containerResources.resources.mio | nindent 10}}
            {{- else if eq .Values.global.deploy_env "ilt" }}
            {{- toYaml .Values.containerResources.resources.ilt | nindent 10}}
            {{- else if eq .Values.global.deploy_env "kidc" }}
            {{- toYaml .Values.containerResources.resources.kidc | nindent 10}}
            {{- else }}
            resource: "invalid global.deploy_env"
            {{ end }}
        {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.podLivenessProbe.enabled }}
          livenessProbe:
          {{- toYaml .Values.podLivenessProbe.livenessProbe | nindent 10}}
        {{- end }}
        {{- if .Values.podReadinessProbe.enabled }}
          readinessProbe:
          {{- toYaml .Values.podReadinessProbe.readinessProbe | nindent 10}}
        {{- end }}
        {{- if .Values.containerVolume.enabled }}
          volumeMounts:
          {{- toYaml .Values.containerVolume.volumeMounts | nindent 10}}
      volumes:
        {{- toYaml .Values.nodeVolume.volumes | nindent 8}}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      {{- if .Values.podNodeSelector.enabled}}
      nodeSelector:
        {{- toYaml .Values.podNodeSelector.nodeSelector | nindent 8}}
      {{- end}}