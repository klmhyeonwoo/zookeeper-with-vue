{"version":3,"sources":["../../src/queryCache.ts"],"sourcesContent":["import { QueryCache as QC } from '@tanstack/query-core'\nimport { cloneDeepUnref } from './utils'\nimport type {\n  DefaultError,\n  Query,\n  QueryFilters,\n  WithRequired,\n} from '@tanstack/query-core'\nimport type { MaybeRefDeep } from './types'\n\nexport class QueryCache extends QC {\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: MaybeRefDeep<WithRequired<QueryFilters, 'queryKey'>>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    return super.find(cloneDeepUnref(filters))\n  }\n\n  findAll(filters: MaybeRefDeep<QueryFilters> = {}): Array<Query> {\n    return super.findAll(cloneDeepUnref(filters))\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiC;AACjC,mBAA+B;AASxB,IAAM,aAAN,cAAyB,kBAAAA,WAAG;AAAA,EACjC,KACE,SACgD;AAChD,WAAO,MAAM,SAAK,6BAAe,OAAO,CAAC;AAAA,EAC3C;AAAA,EAEA,QAAQ,UAAsC,CAAC,GAAiB;AAC9D,WAAO,MAAM,YAAQ,6BAAe,OAAO,CAAC;AAAA,EAC9C;AACF;","names":["QC"]}