"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/devtools/utils.ts
var utils_exports = {};
__export(utils_exports, {
  getQueryState: () => getQueryState,
  getQueryStateLabel: () => getQueryStateLabel,
  getQueryStatusBg: () => getQueryStatusBg,
  getQueryStatusFg: () => getQueryStatusFg,
  sortFns: () => sortFns
});
module.exports = __toCommonJS(utils_exports);
function getQueryState(query) {
  if (query.state.fetchStatus === "fetching") {
    return 0 /* Fetching */;
  }
  if (query.state.fetchStatus === "paused") {
    return 4 /* Paused */;
  }
  if (!query.getObserversCount()) {
    return 3 /* Inactive */;
  }
  if (query.isStale()) {
    return 2 /* Stale */;
  }
  return 1 /* Fresh */;
}
function getQueryStateLabel(query) {
  const queryState = getQueryState(query);
  if (queryState === 0 /* Fetching */) {
    return "fetching";
  }
  if (queryState === 4 /* Paused */) {
    return "paused";
  }
  if (queryState === 2 /* Stale */) {
    return "stale";
  }
  if (queryState === 3 /* Inactive */) {
    return "inactive";
  }
  return "fresh";
}
function getQueryStatusFg(query) {
  const queryState = getQueryState(query);
  if (queryState === 2 /* Stale */) {
    return 0;
  }
  return 16777215;
}
function getQueryStatusBg(query) {
  const queryState = getQueryState(query);
  if (queryState === 0 /* Fetching */) {
    return 27647;
  }
  if (queryState === 4 /* Paused */) {
    return 9193963;
  }
  if (queryState === 2 /* Stale */) {
    return 16757248;
  }
  if (queryState === 3 /* Inactive */) {
    return 4148832;
  }
  return 33575;
}
var queryHashSort = (a, b) => a.queryHash.localeCompare(b.queryHash);
var dateSort = (a, b) => a.state.dataUpdatedAt < b.state.dataUpdatedAt ? 1 : -1;
var statusAndDateSort = (a, b) => {
  if (getQueryState(a) === getQueryState(b)) {
    return dateSort(a, b);
  }
  return getQueryState(a) > getQueryState(b) ? 1 : -1;
};
var sortFns = {
  "Status > Last Updated": statusAndDateSort,
  "Query Hash": queryHashSort,
  "Last Updated": dateSort
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getQueryState,
  getQueryStateLabel,
  getQueryStatusBg,
  getQueryStatusFg,
  sortFns
});
//# sourceMappingURL=utils.cjs.map